spec_i([ proc,0,'Stub for RankingCountry','RankingCountry',80,eng,'17_0_8-158023' ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'ISOLATION_LEVEL','CR')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','Timeout=120')).
rule_i(0,datastore(1,'USER_PASSWORD','uZXÔ=ˆoÒEÌ''[Z}tvÜCÚ¿ÌT')).
rule_i(0,datastore(1,'USER_ID',uZXAxoI7SbyvxC12)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','trialapps3.genexus.com')).
rule_i(0,datastore(1,'CS_DBNAME','Idd34a97045eb5096d2a7b475d46cdbbd3')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('CALL_PROTOCOL','HTTP')).
rule_i(0,prop(idISPRCWEBSERVICE,'0')).
rule_i(0,maingen(15)).
rule_i(0,parm([],[])).
rule_i(0,parmio([])).
rule_i(0,stub(proc)).
 
a_i(1,1,f,'Err',[],[ [],[ t('0',3) ] ]).
 
v_i(f,i,1,[]).
v_i(f,o,1,'Err').
 
 
 
 
 
 
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',3 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',2 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
break_i(1,rpt,0,[],[ [],[],[] ]).
 
b_group_i(1,1,lit,0,1,0).
 
b_line_i(1,1,1,cmd,1,[ t('',163,1,0),t('ARankingCountry',3,1,0),t(15,3,1,0),t('',3,1,0),t(',',7,1,0),t(')',4,1,0) ]).
 
 
 
 
 
 
page_layout_i([ 66,0,6 ]).
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
calling_main_i(1,27).
 
 
 
 
 
 
 
 
 
struct_dt_i([ 26,58,0 ],name,'SDTCountries').
struct_dt_i([ 26,58,0 ],namespace,'Traveling').
struct_dt_i([ 26,58,0 ],'ObjName','SDTCountries').
struct_dt_i([ 26,58,0 ],'ObjDesc','SDTCountries').
struct_dt_i([ 26,58,0 ],'ExternalName','SDTCountries').
struct_dt_i([ 26,58,0 ],'ExternalNamespace','Traveling').
struct_dt_i([ 26,58,0 ],collection,'True').
struct_dt_i([ 26,58,0 ],datatype,[ 26,58,86 ]).
struct_dt_i([ 26,58,0 ],'CollectionItemName','SDTCountriesItem').
struct_dt_i([ 26,58,0 ],'XmlName','').
struct_dt_i([ 26,58,0 ],'XmlCollectionItemName','').
struct_dt_i([ 26,58,0 ],'XmlNamespace','').
struct_dt_i([ 26,58,0 ],'CollectionSerialization',idXmlCollectionWrapped).
struct_dt_i([ 26,58,0 ],'XmlInclude',idXmlIncludeAlways).
struct_dt_i([ 26,58,0 ],'JsonName','').
struct_dt_i([ 26,58,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 26,58,0 ],'JsonCollectionSerialization',idXmlCollectionWrapped).
struct_dt_i([ 26,58,86 ],name,'SDTCountriesItem').
struct_dt_i([ 26,58,86 ],namespace,'Traveling.SDTCountries').
struct_dt_i([ 26,58,0 ],fullname,'SDTCountries').
struct_dt_i([ 26,58,86 ],fullname,'SDTCountries.SDTCountriesItem').
 
struct_dt_elem_i([ 26,58,86 ],1,name,'Id').
struct_dt_elem_i([ 26,58,86 ],1,camelname,'Id').
struct_dt_elem_i([ 26,58,86 ],1,basedon,85).
struct_dt_elem_i([ 26,58,86 ],1,length,4).
struct_dt_elem_i([ 26,58,86 ],1,decimals,0).
struct_dt_elem_i([ 26,58,86 ],1,sign,0).
struct_dt_elem_i([ 26,58,86 ],1,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,58,86 ],1,pic,'ZZZ9').
struct_dt_elem_i([ 26,58,86 ],1,collection,'False').
struct_dt_elem_i([ 26,58,86 ],1,'ExternalName','Id').
struct_dt_elem_i([ 26,58,86 ],1,'ExternalNamespace','Traveling').
struct_dt_elem_i([ 26,58,86 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,58,86 ],1,'XmlName','').
struct_dt_elem_i([ 26,58,86 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,58,86 ],1,soaptype,'').
struct_dt_elem_i([ 26,58,86 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,86 ],1,'JsonName','').
struct_dt_elem_i([ 26,58,86 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,86 ],2,name,'Name').
struct_dt_elem_i([ 26,58,86 ],2,camelname,'Name').
struct_dt_elem_i([ 26,58,86 ],2,length,20).
struct_dt_elem_i([ 26,58,86 ],2,decimals,0).
struct_dt_elem_i([ 26,58,86 ],2,type,[ 5,20,0 ]).
struct_dt_elem_i([ 26,58,86 ],2,pic,'').
struct_dt_elem_i([ 26,58,86 ],2,collection,'False').
struct_dt_elem_i([ 26,58,86 ],2,'ExternalName','Name').
struct_dt_elem_i([ 26,58,86 ],2,'ExternalNamespace','Traveling').
struct_dt_elem_i([ 26,58,86 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,58,86 ],2,'XmlName','').
struct_dt_elem_i([ 26,58,86 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,58,86 ],2,soaptype,'').
struct_dt_elem_i([ 26,58,86 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,86 ],2,'JsonName','').
struct_dt_elem_i([ 26,58,86 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,58,86 ],3,name,'Attractionsquantity').
struct_dt_elem_i([ 26,58,86 ],3,camelname,'AttractionsQuantity').
struct_dt_elem_i([ 26,58,86 ],3,length,4).
struct_dt_elem_i([ 26,58,86 ],3,decimals,0).
struct_dt_elem_i([ 26,58,86 ],3,sign,0).
struct_dt_elem_i([ 26,58,86 ],3,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,58,86 ],3,pic,'ZZZ9').
struct_dt_elem_i([ 26,58,86 ],3,collection,'False').
struct_dt_elem_i([ 26,58,86 ],3,'ExternalName','AttractionsQuantity').
struct_dt_elem_i([ 26,58,86 ],3,'ExternalNamespace','Traveling').
struct_dt_elem_i([ 26,58,86 ],3,'XmlType','Element').
struct_dt_elem_i([ 26,58,86 ],3,'XmlName','').
struct_dt_elem_i([ 26,58,86 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,58,86 ],3,soaptype,'').
struct_dt_elem_i([ 26,58,86 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,58,86 ],3,'JsonName','').
struct_dt_elem_i([ 26,58,86 ],3,'JsonInclude',idJsonEmpty).
 
 
 
 
 
 
pgm_parm_i(proc,27,'ARANKINGCOUNTRY',[],[]).
 
pgm_callprotocol_i(proc,0,'RANKINGCOUNTRY','INTERNAL','').
pgm_callprotocol_i(proc,27,'ARANKINGCOUNTRY','HTTP','Secure').
 
 
pgm_main_info_i(proc,27,'RANKINGCOUNTRY',[ 15,'ARANKINGCOUNTRY','Ranking Country','','','','HTTP' ]).
 
 
 
 
 
 
 
 
 
 
 
 
